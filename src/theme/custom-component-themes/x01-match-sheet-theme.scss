@use 'sass:map';
@use '~@angular/material/index' as mat;
@use "devices" as devices;

@mixin color($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);

  // Get the primary color palette from the color-config.
  $accent-palette: map.get($color-config, 'accent');
  $background-palette: map.get($color-config, 'background');
  $custom-palette: map.get($color-config, 'custom');

  .x01-match-sheet-container {
    .name {
      background-color: mat.get-color-from-palette($background-palette, 'hover');

      &.win-or-draw {
        color: mat.get-color-from-palette($custom-palette, 'win-or-draw-contrast');
        background-color: mat.get-color-from-palette($custom-palette, 'win-or-draw');
      }
    }

    .player-information-container, .player-remaining-container, .player-information-middle-container, .player-remaining-middle-container {
      border-color: transparent;
    }

    .player-information-container.current-throw, .player-remaining-container.current-throw {
      border-color: mat.get-color-from-palette($accent-palette);
    }

    .starts-leg {
      background-color: mat.get-color-from-palette($accent-palette);
    }
  }
}

@mixin typography($theme) {
  // Get the typography config from the theme.
  $typography-config: mat.get-typography-config($theme);

  .x01-match-sheet-container {
    .players-information-container, .players-remaining-container, .match-error {
      @include devices.device(phone, phablet) {
        @include mat.typography-level($typography-config, subheading-2);
      }

      @include devices.device(tablet, desktop, desktop-xl) {
        @include mat.typography-level($typography-config, title);
      }
    }

    .name {
      @include devices.device(phone, phablet) {
        @include mat.typography-level($typography-config, title);
      }

      @include devices.device(tablet, desktop, desktop-xl) {
        @include mat.typography-level($typography-config, headline);
        font-weight: 500;
      }
    }

    .average-value, .best-of-value, .last-score-value, .player-score-value {
      font-weight: 600;
    }

    .big-remaining {
      @include devices.device(phone) {
        @include mat.typography-level($typography-config, headline);
        font-weight: 500;
      }

      @include devices.device(phablet) {
        @include mat.typography-level($typography-config, display-1);
        font-weight: 500;
      }

      @include devices.device(tablet, desktop, desktop-xl) {
        @include mat.typography-level($typography-config, display-3);
        font-weight: 600;
      }

      @include devices.device(desktop-xl) {
        @include mat.typography-level($typography-config, display-3);
        font-weight: 600;
      }
    }
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
