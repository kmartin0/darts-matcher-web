@use 'sass:map';
@use 'node_modules/@angular/material' as mat;
@use 'devices' as devices;

@mixin color($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);
  $background-palette: map.get($color-config, background);
  $custom-palette: map.get($color-config, custom);

  .information-card {
    .information-card-title {
      background-color: mat.get-color-from-palette($background-palette, 'hover');
    }

    .information-category-title {
      background-color: mat.get-color-from-palette($background-palette, 'hover');
    }
  }
}

@mixin typography($theme) {
  // Get the typography config from the theme.
  $typography-config: mat.get-typography-config($theme);

  .information-card {
    .information-card-title {
      @include mat.typography-level($typography-config, subheading-2);
      font-weight: 500;

      @include devices.device(desktop, desktop-xl) {
        @include mat.typography-level($typography-config, headline);
        font-weight: 500;
      }
    }

    .information-category-title {
      @include mat.typography-level($typography-config, subheading-1);
      font-weight: 500;

      @include devices.device(desktop, desktop-xl) {
        @include mat.typography-level($typography-config, title);
        font-weight: 500;
      }
    }

    .information-title, .information-value {
      @include mat.typography-level($typography-config, body-1);

      @include devices.device(desktop, desktop-xl) {
        @include mat.typography-level($typography-config, subheading-2);
      }
    }

    .information-value {
      font-weight: 600;
    }
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
